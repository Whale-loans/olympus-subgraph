type DailyBond @entity {
  id: ID!
  timestamp: BigInt!
  token: Token!
  amount: BigDecimal!
  value: BigDecimal!
}

type Humpie @entity {
  id: ID!
  bondDeposits: [Deposit!]! @derivedFrom(field: "humpie")
  bondRedemptions: [Redemption!]! @derivedFrom(field: "humpie")
  stakeTransactions: [Stake!]! @derivedFrom(field: "humpie")
  unstakeTransactions: [Unstake!]! @derivedFrom(field: "humpie")
  historicBalance: [HumpieBalance!]! @derivedFrom(field: "humpie")
  lastBalance: HumpieBalance
  active: Boolean!
}

type HumpieBalance @entity {
  id: ID!
  humpie: Humpie!
  shumpBalance: BigDecimal!
  humpBalance: BigDecimal!
  bondBalance: BigDecimal!
  dollarBalance: BigDecimal!
  stakes: [ContractInfo!]
  bonds: [ContractInfo!]
  timestamp: BigInt!
}

type Deposit @entity {
  id: ID!
  transaction: Transaction!
  humpie: Humpie!
  amount: BigDecimal!
  maxPremium: BigDecimal!
  token: Token!
  value: BigDecimal!
  timestamp: BigInt!
}

type Redemption @entity {
  id: ID!
  transaction: Transaction
  humpie: Humpie
  token: Token
  timestamp: BigInt
}

type Stake @entity {
  id: ID!
  transaction: Transaction!
  humpie: Humpie!
  amount: BigDecimal!
  timestamp: BigInt!
}

type Unstake @entity {
  id: ID!
  transaction: Transaction!
  humpie: Humpie!
  amount: BigDecimal!
  timestamp: BigInt!
}

type Rebase @entity {
  id: ID!
  transaction: String!
  amount: BigDecimal!
  stakedHumps: BigDecimal!
  percentage: BigDecimal!
  contract: String!
  timestamp: BigInt!
  value: BigDecimal!
}

type DailyStakingReward @entity {
  id: ID!
  timestamp: BigInt!
  amount: BigDecimal!
  value: BigDecimal!
}

type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockHash: Bytes!
  from: Bytes!
  to: Bytes
  value: BigInt!
  gasUsed: BigInt!
  gasPrice: BigInt!
}

type Token @entity {
  id: ID!
}

type ProtocolMetric @entity {
  id: ID!
  timestamp: BigInt!
  humpCirculatingSupply: BigDecimal!
  sHumpCirculatingSupply: BigDecimal!
  totalSupply: BigDecimal!
  humpPrice: BigDecimal!
  marketCap: BigDecimal!
  totalValueLocked: BigDecimal!
  treasuryRiskFreeValue: BigDecimal!
  treasuryMarketValue: BigDecimal!
  nextEpochRebase: BigDecimal!
  nextDistributedHump: BigDecimal!
  treasuryDaiRiskFreeValue: BigDecimal!
  treasuryFraxRiskFreeValue: BigDecimal!
  treasuryLusdRiskFreeValue: BigDecimal!
  treasuryWBNBRiskFreeValue: BigDecimal!
  treasuryDaiMarketValue: BigDecimal!
  treasuryFraxMarketValue: BigDecimal!
  treasuryLusdMarketValue: BigDecimal!
  treasuryXsushiMarketValue: BigDecimal!
  treasuryWBNBMarketValue: BigDecimal!
  treasuryCVXMarketValue: BigDecimal!
  currentAPY: BigDecimal!
  runway2dot5k: BigDecimal
  runway5k: BigDecimal
  runway7dot5k: BigDecimal
  runway10k: BigDecimal
  runway20k: BigDecimal
  runway50k: BigDecimal
  runway70k: BigDecimal
  runway100k: BigDecimal
  runwayCurrent: BigDecimal
  treasuryHumpDaiPOL: BigDecimal!
  treasuryHumpFraxPOL: BigDecimal!
  treasuryHumpLusdPOL: BigDecimal!
  treasuryHumpEthPOL: BigDecimal!
  holders: BigInt!
}

type ContractInfo @entity {
  id: ID!
  name: String
  contract: String
  amount: BigDecimal
}

type Aux @entity {
  id: ID!
  value: BigInt!
}

type BondDiscount @entity {
  id: ID!
  timestamp: BigInt!
  busd_discount: BigDecimal!
  humpbusd_discount: BigDecimal!
  frax_discount: BigDecimal!
  humpfrax_discount: BigDecimal!
  eth_discount: BigDecimal!
  lusd_discount: BigDecimal!
  humplusd_discount: BigDecimal!
}