// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class HumpStakingV1 extends ethereum.SmartContract {
  static bind(address: Address): HumpStakingV1 {
    return new HumpStakingV1("HumpStakingV1", address);
  }

  epochLengthInBlocks(): BigInt {
    let result = super.call(
      "epochLengthInBlocks",
      "epochLengthInBlocks():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_epochLengthInBlocks(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "epochLengthInBlocks",
      "epochLengthInBlocks():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hump(): Address {
    let result = super.call("hump", "hump():(address)", []);

    return result[0].toAddress();
  }

  try_hump(): ethereum.CallResult<Address> {
    let result = super.tryCall("hump", "hump():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  humpToDistributeNextEpoch(): BigInt {
    let result = super.call(
      "humpToDistributeNextEpoch",
      "humpToDistributeNextEpoch():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_humpToDistributeNextEpoch(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "humpToDistributeNextEpoch",
      "humpToDistributeNextEpoch():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sHUMP(): Address {
    let result = super.call("sHUMP", "sHUMP():(address)", []);

    return result[0].toAddress();
  }

  try_sHUMP(): ethereum.CallResult<Address> {
    let result = super.tryCall("sHUMP", "sHUMP():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stakeHUMP(amountToStake_: BigInt): boolean {
    let result = super.call("stakeHUMP", "stakeHUMP(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amountToStake_)
    ]);

    return result[0].toBoolean();
  }

  try_stakeHUMP(amountToStake_: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("stakeHUMP", "stakeHUMP(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amountToStake_)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  unstakeHUMP(amountToWithdraw_: BigInt): boolean {
    let result = super.call("unstakeHUMP", "unstakeHUMP(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amountToWithdraw_)
    ]);

    return result[0].toBoolean();
  }

  try_unstakeHUMP(amountToWithdraw_: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("unstakeHUMP", "unstakeHUMP(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amountToWithdraw_)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get humpTokenAddress_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get sHUMP_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get epochLengthInBlocks_(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetEpochLengthintBlockCall extends ethereum.Call {
  get inputs(): SetEpochLengthintBlockCall__Inputs {
    return new SetEpochLengthintBlockCall__Inputs(this);
  }

  get outputs(): SetEpochLengthintBlockCall__Outputs {
    return new SetEpochLengthintBlockCall__Outputs(this);
  }
}

export class SetEpochLengthintBlockCall__Inputs {
  _call: SetEpochLengthintBlockCall;

  constructor(call: SetEpochLengthintBlockCall) {
    this._call = call;
  }

  get newEpochLengthInBlocks_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEpochLengthintBlockCall__Outputs {
  _call: SetEpochLengthintBlockCall;

  constructor(call: SetEpochLengthintBlockCall) {
    this._call = call;
  }
}

export class StakeHUMPCall extends ethereum.Call {
  get inputs(): StakeHUMPCall__Inputs {
    return new StakeHUMPCall__Inputs(this);
  }

  get outputs(): StakeHUMPCall__Outputs {
    return new StakeHUMPCall__Outputs(this);
  }
}

export class StakeHUMPCall__Inputs {
  _call: StakeHUMPCall;

  constructor(call: StakeHUMPCall) {
    this._call = call;
  }

  get amountToStake_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StakeHUMPCall__Outputs {
  _call: StakeHUMPCall;

  constructor(call: StakeHUMPCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class StakeHUMPWithPermitCall extends ethereum.Call {
  get inputs(): StakeHUMPWithPermitCall__Inputs {
    return new StakeHUMPWithPermitCall__Inputs(this);
  }

  get outputs(): StakeHUMPWithPermitCall__Outputs {
    return new StakeHUMPWithPermitCall__Outputs(this);
  }
}

export class StakeHUMPWithPermitCall__Inputs {
  _call: StakeHUMPWithPermitCall;

  constructor(call: StakeHUMPWithPermitCall) {
    this._call = call;
  }

  get amountToStake_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get deadline_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v_(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r_(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s_(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class StakeHUMPWithPermitCall__Outputs {
  _call: StakeHUMPWithPermitCall;

  constructor(call: StakeHUMPWithPermitCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnstakeHUMPCall extends ethereum.Call {
  get inputs(): UnstakeHUMPCall__Inputs {
    return new UnstakeHUMPCall__Inputs(this);
  }

  get outputs(): UnstakeHUMPCall__Outputs {
    return new UnstakeHUMPCall__Outputs(this);
  }
}

export class UnstakeHUMPCall__Inputs {
  _call: UnstakeHUMPCall;

  constructor(call: UnstakeHUMPCall) {
    this._call = call;
  }

  get amountToWithdraw_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnstakeHUMPCall__Outputs {
  _call: UnstakeHUMPCall;

  constructor(call: UnstakeHUMPCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UnstakeHUMPWithPermitCall extends ethereum.Call {
  get inputs(): UnstakeHUMPWithPermitCall__Inputs {
    return new UnstakeHUMPWithPermitCall__Inputs(this);
  }

  get outputs(): UnstakeHUMPWithPermitCall__Outputs {
    return new UnstakeHUMPWithPermitCall__Outputs(this);
  }
}

export class UnstakeHUMPWithPermitCall__Inputs {
  _call: UnstakeHUMPWithPermitCall;

  constructor(call: UnstakeHUMPWithPermitCall) {
    this._call = call;
  }

  get amountToWithdraw_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get deadline_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v_(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r_(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s_(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class UnstakeHUMPWithPermitCall__Outputs {
  _call: UnstakeHUMPWithPermitCall;

  constructor(call: UnstakeHUMPWithPermitCall) {
    this._call = call;
  }
}
